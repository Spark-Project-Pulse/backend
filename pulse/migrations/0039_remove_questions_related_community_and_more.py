# Generated by Django 5.1.3 on 2024-12-08 16:08

import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('pulse', '0038_badge_badgetier_userbadge_userbadgeprogress_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='questions',
            name='related_community',
        ),
        migrations.RemoveField(
            model_name='communitymembers',
            name='community',
        ),
        migrations.RemoveField(
            model_name='notifications',
            name='community',
        ),
        migrations.RemoveField(
            model_name='communitymembers',
            name='user',
        ),
        migrations.RenameField(
            model_name='notifications',
            old_name='community_title',
            new_name='hive_title',
        ),
        migrations.AlterField(
            model_name='notifications',
            name='notification_type',
            field=models.CharField(choices=[('question_answered', 'New Answer'), ('answer_commented', 'New Comment'), ('question_upvoted', 'Answer Accepted'), ('answer_accepted', 'Mention'), ('mention', 'Vote Received'), ('hive_accepted', 'Hive Accepted'), ('hive_rejected', 'Hive Rejected')], max_length=20),
        ),
        migrations.CreateModel(
            name='Hives',
            fields=[
                ('hive_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.TextField(unique=True)),
                ('description', models.TextField()),
                ('member_count', models.BigIntegerField(default=0)),
                ('avatar_url', models.URLField(blank=True, null=True)),
                ('approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(blank=True, null=True)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pulse.users')),
                ('tags', models.ManyToManyField(blank=True, related_name='hives', to='pulse.tags')),
            ],
            options={
                'db_table': 'Hives',
            },
        ),
        migrations.CreateModel(
            name='HiveMembers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hive_reputation', models.BigIntegerField(default=0)),
                ('contributions', models.BigIntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pulse.users')),
                ('hive', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pulse.hives')),
            ],
            options={
                'db_table': 'HiveMembers',
            },
        ),
        migrations.AddField(
            model_name='notifications',
            name='hive',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='pulse.hives'),
        ),
        migrations.AddField(
            model_name='questions',
            name='related_hive',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pulse.hives'),
        ),
        migrations.DeleteModel(
            name='Communities',
        ),
        migrations.DeleteModel(
            name='CommunityMembers',
        ),
        migrations.AddIndex(
            model_name='hives',
            index=django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='Hives_search__862974_gin'),
        ),
        migrations.AddConstraint(
            model_name='hivemembers',
            constraint=models.UniqueConstraint(fields=('hive', 'user'), name='unique_hive_user'),
        ),
    ]
