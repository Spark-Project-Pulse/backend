name: Deploy to Google Cloud Run

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Google Cloud SDK
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
        service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        export_default_credentials: true

    # Step 3: Build the Docker image locally (no push to GCR)
    - name: Build Docker image
      run: |
        docker build -t my-app .

    # Step 4: Deploy directly to Cloud Run with custom configurations
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy my-app \
          --image "my-app" \
          --region us-east4 \
          --platform managed \
          --allow-unauthenticated=false \  # Disables public access to the API
          --ingress internal-and-cloud-load-balancing \  # Restrict ingress to internal traffic and cloud load balancing
          --set-cloudsql-instances YOUR_INSTANCE_CONNECTION_NAME \  # Optionally restrict ingress traffic further
          --no-cpu-throttling \  # Ensure CPU is allocated only during request processing
          --min-instances 1 \  # Set minimum number of instances to 1
          --max-instances 10 \  # Adjust based on your scaling needs
          --service-account ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }} \
          --vpc-egress all \
          --port 8080  # Port 8080 is the set port by Google Cloud Run
          --set-env-vars SECRET_KEY=${{ secrets.SECRET_KEY }}  # Pass Django SECRET_KEY to Cloud Run