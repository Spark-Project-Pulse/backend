name: Deploy Backend to Google Cloud Run

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Authenticate to Google Cloud
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    # Step 3: Set up Google Cloud SDK
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GOOGLE_CLOUD_PROJECT }}

    # Step 4: Configure Docker to use gcloud as a credential helper
    - name: Configure Docker for GAR
      run: |
        gcloud auth configure-docker ${{ secrets.REGION }}-docker.pkg.dev --quiet

    # Step 5: Create Docker repository in Artifact Registry (if it doesn't exist)
    - name: Create Artifact Registry Repository
      run: |
        gcloud artifacts repositories create pulse-backend \
          --repository-format=docker \
          --location=${{ secrets.REGION }} \
          --description="Docker repository for pulse-backend" || echo "Repository already exists."

    # Step 6: Build Docker image for backend
    - name: Build Docker image for backend
      run: |
        docker build -t ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GOOGLE_CLOUD_PROJECT }}/pulse-backend/image-${{ github.sha }} .

    # Step 7: Push Docker image to Google Artifact Registry
    - name: Push Docker image to Google Artifact Registry
      run: |
        docker push ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GOOGLE_CLOUD_PROJECT }}/pulse-backend/image-${{ github.sha }}

    # Step 8: Deploy directly to Cloud Run with custom configurations
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy pulse-backend \
          --image="${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.GOOGLE_CLOUD_PROJECT }}/pulse-backend/image-${{ github.sha }}" \
          --region="${{ secrets.REGION }}" \
          --platform managed \
          --ingress internal-and-cloud-load-balancing \
          --allow-unauthenticated \
          --no-cpu-throttling \
          --min-instances 1 \
          --max-instances 10 \
          --port 8080 \
          --set-env-vars SECRET_KEY="${{ secrets.SECRET_KEY }}" \
          --set-env-vars CORS_ALLOWED_ORIGIN="${{ secrets.CORS_ALLOWED_ORIGIN }}"

      # TODO: add these settings back
      # --ingress internal-and-cloud-load-balancing \
      # --no-allow-unauthenticated \
    
    # Step 9: Grant frontend service account permission to invoke the backend
    - name: Grant Frontend Invoker Permissions
      run: |
        gcloud run services add-iam-policy-binding pulse-backend \
          --member="serviceAccount:${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}" \
          --role="roles/run.invoker" \
          --region="${{ secrets.REGION }}"
